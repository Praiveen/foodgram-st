services:
  db:
    container_name: foodgram-db
    image: postgres:13-alpine
    ports:
      - "5000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

  backend:
    container_name: foodgram-backend
    build: ../backend
    restart: always
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file: .env

  frontend:
    container_name: foodgram-frontend
    build: ../frontend
    command: sh -c "cp -r /app/build/. /frontend_static/ && echo 'Frontend assets copied'"
    volumes:
      - static_volume:/frontend_static

  nginx:
    container_name: foodgram-gateway
    build:
      context: .
      dockerfile: nginx.Dockerfile
    volumes:
      - static_volume:/staticfiles
      - media_volume:/media
      - ../docs/:/usr/share/nginx/html/api/docs/
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume: