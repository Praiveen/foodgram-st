{
	"id": "7e8cab00-8e41-48ac-b8d5-773e6f73a387",
	"name": "diploma",
	"timestamp": "2025-05-24T22:31:04.822Z",
	"collection_id": "34052745-65407a50-4f68-4ca9-9714-3c9473f5f397",
	"folder_id": 0,
	"environment_id": "34052745-06dce5d5-0d77-41ba-a49e-16d0bd870292",
	"totalPass": 122,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-05-24T22:30:50.255Z",
	"totalFail": 76,
	"results": [
		{
			"id": "bc4ae67a-c23d-47b7-9eda-bd8784cffd72",
			"name": "create_first_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 770,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				770
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "8ac3f24e-3f86-49d4-90c6-1abf5d5529d7",
			"name": "create_second_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 659,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				659
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "e9c908ee-083e-4ba5-95bb-5f48cc007118",
			"name": "create_third_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 650,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				650
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "73f789fa-8175-4f40-b437-5c918d770ffd",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 653,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				653
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "ed06f134-2247-4f9f-94da-477f2d6712d9",
			"name": "get_token_for_second_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 736,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				736
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "e1743822-c44f-4027-904e-5394af648708",
			"name": "user_registration_without_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b516c807-e884-4e95-a201-a0eefda6c1a0",
			"name": "user_registration_without_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a3d60859-bb44-46cb-a233-e1e0dce4dc45",
			"name": "user_registration_without_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "7ca636d3-4ab9-45ab-b21c-f270955f18ea",
			"name": "user_registration_without_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "794b8f84-8924-49dd-b3c0-f11212dbce65",
			"name": "user_registration_without_password",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "db45a8e9-1494-4722-bc48-49561fecb5ed",
			"name": "user_registration_too_long_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "547ba80f-d625-4b86-8484-9e3f150956ad",
			"name": "user_registration_too_long_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b9086376-0575-42fc-a1cf-101b6490fdac",
			"name": "user_registration_too_long_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "742236f3-3fbf-4ce2-9f90-11304cb8d348",
			"name": "user_registration_too_long_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5b9fdd4c-396b-43c6-b323-61af3d602001",
			"name": "user_registration_with_invalid_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "7542db97-50a3-4b59-a5ea-7e8153b737d2",
			"name": "user_registration_email_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "819b78f5-a6cd-4cb2-b1a3-6e47c550397c",
			"name": "user_registration_username_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a4b7a116-45af-49bb-8e84-d5cc901b5810",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 643,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				643
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "922e8586-396b-4b5c-aee7-301a80723486",
			"name": "get_token_no_email",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "df5b93b5-87f2-4048-8186-220596dbbf02",
			"name": "get_token_no_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d43d4bde-fb7e-4cce-b48f-584960b25968",
			"name": "logout // User",
			"url": "http://127.0.0.1:8000/api/auth/token/logout/",
			"time": 16,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d0f403fd-c832-4556-b500-5cabc32507ad",
			"name": "get_token",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 645,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				645
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "9eb85483-02cb-475c-ab5c-85b1cc06405c",
			"name": "get_user_list // No Auth",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "aaf24d18-948c-4ad8-b947-9618bfc89507",
			"name": "get_user_list// User",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "a0e82db0-3755-4fa0-901b-a2171277ddb9",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/?limit=1",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "9e3033ff-7991-4fde-8690-1d6c7d47acdb",
			"name": "get_profile // No Auth",
			"url": "http://127.0.0.1:8000/api/users/1/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "1deb066a-0b94-4384-aaa9-32b3e23ea9b4",
			"name": "get_profile // User",
			"url": "http://127.0.0.1:8000/api/users/1/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b3893ea2-b3a4-4f0c-8085-31027fdaaef8",
			"name": "users_me // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": false
				}
			]
		},
		{
			"id": "e6a4ec5f-8a59-498a-aca8-5f871724e3c8",
			"name": "set_avatar // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 93,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f5886fc5-500b-48de-8173-f4b8a8a6988d",
			"name": "check_avatar_is_set // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Поле `avatar` должно содержать ссылку на аватар": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Поле `avatar` должно содержать ссылку на аватар": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Поле `avatar` должно содержать ссылку на аватар": false
				}
			]
		},
		{
			"id": "f1972b76-d3ad-43f0-b1be-96ea40d8a10a",
			"name": "reset_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 1424,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1424
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "7c2f511b-cc53-470c-be46-7f2db1c8954e",
			"name": "get_token_with_new_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 654,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				654
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "6c4c0fc8-b1e5-4e56-9919-ed7e20448a97",
			"name": "roll_back_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 1354,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1354
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "63d4f186-3b16-48c8-acb7-deeb5473e395",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 647,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				647
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "626b45e1-d952-4603-94c7-f9cb6566f7b8",
			"name": "users_me // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 51,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				51
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "9c327d2a-8cac-411a-8809-456023a74f8b",
			"name": "get_non_existing_profile // User",
			"url": "http://127.0.0.1:8000/api/users/9876/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "78a1a28c-daf0-444c-8bfb-84811c8eaa9f",
			"name": "reset_password_wrong_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 632,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				632
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5de231c1-760b-40ae-a06e-cefa7f1cca55",
			"name": "delete_avatar // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "98c6a905-2beb-4bca-b574-b38ff5cd8ec8",
			"name": "set_avatar // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 6,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "e22be599-5461-432c-9347-e1c68db8b511",
			"name": "set_avatar_empty_body // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f2133457-c686-4020-93d0-b4fea6ec358e",
			"name": "delete_avatar // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 10,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "5cb1b195-baab-4d8c-8c9e-f5cb54c360af",
			"name": "check_avatar_is_deleted // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Поле `avatar` должно быть пустым": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Поле `avatar` должно быть пустым": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Поле `avatar` должно быть пустым": false
				}
			]
		},
		{
			"id": "d1cc8cd7-f351-48e4-8dea-9f33b62d4392",
			"name": "get_ingredients_list // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "32ec1c33-3ced-4e95-8f92-bb13b73a9ab0",
			"name": "get_ingredients_list // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "18748abf-ffd1-4c44-8b24-a70c64299945",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://127.0.0.1:8000/api/ingredients/?name=Б",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "d38f6091-b562-46ae-bc76-60361516d3f9",
			"name": "get_ingredient // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "efe9b508-d348-4d3d-9ad5-5bf777176b8d",
			"name": "get_ingredients_list // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "8f4c7162-8d22-498b-9d0c-d7e2b27becf7",
			"name": "get_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/9876/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "79ad71dd-e99c-4920-b5fc-afa43d445e53",
			"name": "create_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 7,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "e0d91a75-df40-4d91-9bb8-637a9d29f270",
			"name": "put_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "7e8d9bc6-6c18-4dbb-b2c3-b8d09e88a100",
			"name": "patch_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 7,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "03eee788-af22-4615-affe-ee8a2d4b4c37",
			"name": "delete_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 8,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "3a2d6337-581c-45e7-a1f0-7b96a50e5e25",
			"name": "create_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "5cab0fee-0fb6-4bce-b594-6944a4e2e0e9",
			"name": "create_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "9c8e5532-80e2-4089-8f07-31721c1d255f",
			"name": "create_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "a700b9c6-3fd0-4ae2-bf1c-66aa75974f1b",
			"name": "create_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "256d8202-148c-46bb-8f28-b75550a137b4",
			"name": "create_fifth_recipe // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "8963aaaf-a06a-401d-b4ad-52485fd0a283",
			"name": "get_recipes_list // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "d316d284-3bdf-4f06-8a87-bae288743ce1",
			"name": "get_recipes_list // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "0746c051-ee4f-4235-a1c9-ae389605f49c",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?limit=2",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
				}
			]
		},
		{
			"id": "4828bc9e-8d3e-4194-9675-926d8c162099",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?author=1",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
				}
			]
		},
		{
			"id": "ae1a8d24-d468-48ac-829b-09836247b245",
			"name": "get_recipe_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "aedd607b-5f5b-4342-8672-0c0343379b4e",
			"name": "get_recipe_detail // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "e23fbccf-af51-412a-9dab-ea0e235d4a1f",
			"name": "get_recipe_short_link // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "264db39a-3311-4e95-9ad3-e583b3fce6d6",
			"name": "get_recipe_short_link // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "379c3af8-c79b-4f4c-947b-5e790b4703d0",
			"name": "update_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа соответствует ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа соответствует ожидаемой": false
				}
			]
		},
		{
			"id": "3626f5c7-a742-46c3-87c9-385d30917bf5",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "602a2629-136c-4aab-b7ec-573b91aff155",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e2687d1c-844c-4739-b6d6-ee6c3f2fd529",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "cccf5287-6ac8-4c52-bd41-cf0cdb570ccc",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1431b614-e528-4c05-b75d-417296c36722",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8a5ef8df-51b0-4ab7-a23b-641e17c0d2a2",
			"name": "create_recipe_without_image_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b500eb3f-1020-444f-89c5-332b458edcd9",
			"name": "create_recipe_empty_image // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "981f3df6-0aac-4888-9dad-7962fcc94e21",
			"name": "create_recipe_without_name_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "acf0b25a-fba9-46b6-bf37-997c0907cefc",
			"name": "create_recipe_empty_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9424affa-4a13-44da-adcb-ae8490676fe0",
			"name": "create_recipe_too_long_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c7902f1b-6ae1-4459-bf62-6b75cb511317",
			"name": "create_recipe_without_text_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f41c488f-6b58-40e4-8954-cd0b926daeeb",
			"name": "create_recipe_empty_text // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "037fd64d-bcdc-47ab-863e-e00db451695e",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "84783e97-5f46-4662-aac6-3c1fdb8098c0",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "18523ec3-bbd6-432c-b2ea-6033daefc35b",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "dfe9d0cf-bed3-4ba5-9364-d10dac700ec3",
			"name": "create_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "79d4e89d-d025-473b-a3c1-c6c549e0681b",
			"name": "update_recipe_not_author // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "75c6eb8b-dfd0-44a2-88d1-018e2f882695",
			"name": "update_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "05f2399c-e458-4163-8d8b-69f7a26c1f15",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "992af586-f653-4c65-a634-cd208fa59b62",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "6711043f-a81e-43d5-955d-d7e208e6e74a",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "fdd0b424-57e5-41ce-b8ec-bf32943b601f",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "ac87fc1f-cc3b-47f5-bd3a-c1e6e122efed",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "dac6f476-e63c-4781-a059-b4ab4e7e9663",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "32c20777-643c-4e4a-a217-f78cfd6a6542",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f252f71e-74ec-4f98-b90e-359e78f04d51",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "e69f15f4-578e-4ec6-ba1b-2ad8544f0fc4",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "71c6c9c0-fe47-45c4-acb2-7a1d06fbc1d5",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "db40e871-d709-4900-82b4-07655a43fcdc",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "c102b04c-b1e1-46ce-9dd9-5df4cf2c110d",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "28391fda-23a4-411d-97bb-3c8495256575",
			"name": "create_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 63,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "6d1c13af-d5f8-4c64-a02b-72735a1a9468",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/2/subscribe/?recipes_limit=2",
			"time": 43,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				43
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "5947604e-643b-407a-885d-d9c219f125b3",
			"name": "get_subscription_list // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "960219bf-4ba5-450b-a45b-3e038ee7ca9a",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?limit=1",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
				}
			]
		},
		{
			"id": "578cde74-7687-4330-a8a0-ebc0930b0deb",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?recipes_limit=2",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": false
				}
			]
		},
		{
			"id": "53c72e7f-3259-46b5-a085-d3bbfa3c791b",
			"name": "create_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "cc4d13e4-792c-4e22-957a-3144804c5e1d",
			"name": "create_duplicated_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "25b375e4-4b33-41a4-b905-fc290550b1fb",
			"name": "create_self_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/1/subscribe/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "555e1c1f-d4a1-4b3b-80cc-d74d967fad86",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "a7962992-d817-4909-aaac-5994b6b4291c",
			"name": "add_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 51,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				51
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "db1443f4-ba4e-4352-a8ce-26dee395ece6",
			"name": "download_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/download_shopping_cart/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true
				}
			]
		},
		{
			"id": "8d4c41d3-6f57-4067-b5ec-0523369e8c73",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "1bc89af4-a0f1-435d-bd43-2a64143bf171",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 50,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				50
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "d766fb52-f6a5-4a7a-b27e-d3ec94b612c4",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "07290c8e-83c2-430b-91ef-fb321673cbeb",
			"name": "add_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 50,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				50
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "07df6829-f321-472a-bae9-f57c87c13c8f",
			"name": "add_to_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "00aabb1b-e897-4703-ac60-95510ad230dd",
			"name": "add_again_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 72,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				72
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "5c5270c2-c11c-497d-89b7-329e6f54f22c",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "96bb1b9d-32fb-4ea4-9e9c-9225b2c86a92",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
				}
			]
		},
		{
			"id": "5740ff9d-b799-4cc5-8370-9b94d763b90d",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "cbc84137-ad52-49ba-96b4-2da895338be4",
			"name": "get_recipes_list_with_is_favorited_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "37507080-41ca-4670-b64f-043b29d4a676",
			"name": "get_recipes_list_with_is_favorited_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "cf895315-b16d-4a74-ad12-36b8a9c6000d",
			"name": "delete_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b6c696d5-1748-4616-9252-a7d7b42affb5",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a2e764bc-ebde-4a03-891c-c9f7611a3ffd",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "e10e24be-c6da-4bbd-a5e0-4e540f30d05a",
			"name": "delete_first_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 11,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "00316b65-ffe4-4332-8c11-a9e01e79b750",
			"name": "delete_second_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/2/subscribe/",
			"time": 10,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "4f677cdc-a5d6-445e-a12f-c4ca71806a7b",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "0ee12c18-8f63-4e8f-8985-2041956a844c",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 51,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				51
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "6e728d8b-1ce0-431b-b2d8-d076a91e089f",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "d4220434-025f-4e43-bf0e-0c30bf10e3b7",
			"name": "remove_from_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 80,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				80
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "43fe8c44-4fd9-43fe-9f65-c89b2e5f8a5b",
			"name": "remove_from_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "9a1649a4-2853-4296-b478-5db9ec1f5d3c",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 55,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				55
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "637cf41a-0183-4e8d-8830-a84253162bc6",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "7bb2df62-43a4-43a6-ac3f-e6003413b6ee",
			"name": "remove_from_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 49,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				49
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "7e30759b-1e9a-42c7-8ef6-bf4eaa84a02f",
			"name": "delete_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "dc38cb78-1195-4942-becf-e97ff581a7ba",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "2aedf87d-21e5-4aea-ac3b-1c84396d34b0",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9be9e211-42bd-4721-9d7a-006502ed9435",
			"name": "delete_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "f2a9154f-ed1c-4767-a9bb-1e411a10dbdd",
			"name": "delete_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "87c38732-f3dc-45dc-b1e1-87f3087f425d",
			"name": "delete_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{thirdRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "0c6aeae8-c424-4a80-bbe7-d84c846fcbad",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fourthRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "8b7e8111-21c5-4c22-baf8-7c71881eadf3",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		}
	],
	"count": 1,
	"totalTime": 11006,
	"collection": {
		"requests": [
			{
				"id": "bc4ae67a-c23d-47b7-9eda-bd8784cffd72",
				"method": "POST"
			},
			{
				"id": "8ac3f24e-3f86-49d4-90c6-1abf5d5529d7",
				"method": "POST"
			},
			{
				"id": "e9c908ee-083e-4ba5-95bb-5f48cc007118",
				"method": "POST"
			},
			{
				"id": "73f789fa-8175-4f40-b437-5c918d770ffd",
				"method": "POST"
			},
			{
				"id": "ed06f134-2247-4f9f-94da-477f2d6712d9",
				"method": "POST"
			},
			{
				"id": "e1743822-c44f-4027-904e-5394af648708",
				"method": "POST"
			},
			{
				"id": "b516c807-e884-4e95-a201-a0eefda6c1a0",
				"method": "POST"
			},
			{
				"id": "a3d60859-bb44-46cb-a233-e1e0dce4dc45",
				"method": "POST"
			},
			{
				"id": "7ca636d3-4ab9-45ab-b21c-f270955f18ea",
				"method": "POST"
			},
			{
				"id": "794b8f84-8924-49dd-b3c0-f11212dbce65",
				"method": "POST"
			},
			{
				"id": "db45a8e9-1494-4722-bc48-49561fecb5ed",
				"method": "POST"
			},
			{
				"id": "547ba80f-d625-4b86-8484-9e3f150956ad",
				"method": "POST"
			},
			{
				"id": "b9086376-0575-42fc-a1cf-101b6490fdac",
				"method": "POST"
			},
			{
				"id": "742236f3-3fbf-4ce2-9f90-11304cb8d348",
				"method": "POST"
			},
			{
				"id": "5b9fdd4c-396b-43c6-b323-61af3d602001",
				"method": "POST"
			},
			{
				"id": "7542db97-50a3-4b59-a5ea-7e8153b737d2",
				"method": "POST"
			},
			{
				"id": "819b78f5-a6cd-4cb2-b1a3-6e47c550397c",
				"method": "POST"
			},
			{
				"id": "a4b7a116-45af-49bb-8e84-d5cc901b5810",
				"method": "POST"
			},
			{
				"id": "922e8586-396b-4b5c-aee7-301a80723486",
				"method": "POST"
			},
			{
				"id": "df5b93b5-87f2-4048-8186-220596dbbf02",
				"method": "POST"
			},
			{
				"id": "d43d4bde-fb7e-4cce-b48f-584960b25968",
				"method": "POST"
			},
			{
				"id": "d0f403fd-c832-4556-b500-5cabc32507ad",
				"method": "POST"
			},
			{
				"id": "9eb85483-02cb-475c-ab5c-85b1cc06405c",
				"method": "GET"
			},
			{
				"id": "aaf24d18-948c-4ad8-b947-9618bfc89507",
				"method": "GET"
			},
			{
				"id": "a0e82db0-3755-4fa0-901b-a2171277ddb9",
				"method": "GET"
			},
			{
				"id": "9e3033ff-7991-4fde-8690-1d6c7d47acdb",
				"method": "GET"
			},
			{
				"id": "1deb066a-0b94-4384-aaa9-32b3e23ea9b4",
				"method": "GET"
			},
			{
				"id": "b3893ea2-b3a4-4f0c-8085-31027fdaaef8",
				"method": "GET"
			},
			{
				"id": "e6a4ec5f-8a59-498a-aca8-5f871724e3c8",
				"method": "PUT"
			},
			{
				"id": "f5886fc5-500b-48de-8173-f4b8a8a6988d",
				"method": "GET"
			},
			{
				"id": "f1972b76-d3ad-43f0-b1be-96ea40d8a10a",
				"method": "POST"
			},
			{
				"id": "7c2f511b-cc53-470c-be46-7f2db1c8954e",
				"method": "POST"
			},
			{
				"id": "6c4c0fc8-b1e5-4e56-9919-ed7e20448a97",
				"method": "POST"
			},
			{
				"id": "63d4f186-3b16-48c8-acb7-deeb5473e395",
				"method": "POST"
			},
			{
				"id": "626b45e1-d952-4603-94c7-f9cb6566f7b8",
				"method": "GET"
			},
			{
				"id": "9c327d2a-8cac-411a-8809-456023a74f8b",
				"method": "GET"
			},
			{
				"id": "78a1a28c-daf0-444c-8bfb-84811c8eaa9f",
				"method": "POST"
			},
			{
				"id": "5de231c1-760b-40ae-a06e-cefa7f1cca55",
				"method": "DELETE"
			},
			{
				"id": "98c6a905-2beb-4bca-b574-b38ff5cd8ec8",
				"method": "PUT"
			},
			{
				"id": "e22be599-5461-432c-9347-e1c68db8b511",
				"method": "PUT"
			},
			{
				"id": "f2133457-c686-4020-93d0-b4fea6ec358e",
				"method": "DELETE"
			},
			{
				"id": "5cb1b195-baab-4d8c-8c9e-f5cb54c360af",
				"method": "GET"
			},
			{
				"id": "d1cc8cd7-f351-48e4-8dea-9f33b62d4392",
				"method": "GET"
			},
			{
				"id": "32ec1c33-3ced-4e95-8f92-bb13b73a9ab0",
				"method": "GET"
			},
			{
				"id": "18748abf-ffd1-4c44-8b24-a70c64299945",
				"method": "GET"
			},
			{
				"id": "d38f6091-b562-46ae-bc76-60361516d3f9",
				"method": "GET"
			},
			{
				"id": "efe9b508-d348-4d3d-9ad5-5bf777176b8d",
				"method": "GET"
			},
			{
				"id": "8f4c7162-8d22-498b-9d0c-d7e2b27becf7",
				"method": "GET"
			},
			{
				"id": "79ad71dd-e99c-4920-b5fc-afa43d445e53",
				"method": "POST"
			},
			{
				"id": "e0d91a75-df40-4d91-9bb8-637a9d29f270",
				"method": "PUT"
			},
			{
				"id": "7e8d9bc6-6c18-4dbb-b2c3-b8d09e88a100",
				"method": "PATCH"
			},
			{
				"id": "03eee788-af22-4615-affe-ee8a2d4b4c37",
				"method": "DELETE"
			},
			{
				"id": "3a2d6337-581c-45e7-a1f0-7b96a50e5e25",
				"method": "POST"
			},
			{
				"id": "5cab0fee-0fb6-4bce-b594-6944a4e2e0e9",
				"method": "POST"
			},
			{
				"id": "9c8e5532-80e2-4089-8f07-31721c1d255f",
				"method": "POST"
			},
			{
				"id": "a700b9c6-3fd0-4ae2-bf1c-66aa75974f1b",
				"method": "POST"
			},
			{
				"id": "256d8202-148c-46bb-8f28-b75550a137b4",
				"method": "POST"
			},
			{
				"id": "8963aaaf-a06a-401d-b4ad-52485fd0a283",
				"method": "GET"
			},
			{
				"id": "d316d284-3bdf-4f06-8a87-bae288743ce1",
				"method": "GET"
			},
			{
				"id": "0746c051-ee4f-4235-a1c9-ae389605f49c",
				"method": "GET"
			},
			{
				"id": "4828bc9e-8d3e-4194-9675-926d8c162099",
				"method": "GET"
			},
			{
				"id": "ae1a8d24-d468-48ac-829b-09836247b245",
				"method": "GET"
			},
			{
				"id": "aedd607b-5f5b-4342-8672-0c0343379b4e",
				"method": "GET"
			},
			{
				"id": "e23fbccf-af51-412a-9dab-ea0e235d4a1f",
				"method": "GET"
			},
			{
				"id": "264db39a-3311-4e95-9ad3-e583b3fce6d6",
				"method": "GET"
			},
			{
				"id": "379c3af8-c79b-4f4c-947b-5e790b4703d0",
				"method": "PATCH"
			},
			{
				"id": "3626f5c7-a742-46c3-87c9-385d30917bf5",
				"method": "POST"
			},
			{
				"id": "602a2629-136c-4aab-b7ec-573b91aff155",
				"method": "POST"
			},
			{
				"id": "e2687d1c-844c-4739-b6d6-ee6c3f2fd529",
				"method": "POST"
			},
			{
				"id": "cccf5287-6ac8-4c52-bd41-cf0cdb570ccc",
				"method": "POST"
			},
			{
				"id": "1431b614-e528-4c05-b75d-417296c36722",
				"method": "POST"
			},
			{
				"id": "8a5ef8df-51b0-4ab7-a23b-641e17c0d2a2",
				"method": "POST"
			},
			{
				"id": "b500eb3f-1020-444f-89c5-332b458edcd9",
				"method": "POST"
			},
			{
				"id": "981f3df6-0aac-4888-9dad-7962fcc94e21",
				"method": "POST"
			},
			{
				"id": "acf0b25a-fba9-46b6-bf37-997c0907cefc",
				"method": "POST"
			},
			{
				"id": "9424affa-4a13-44da-adcb-ae8490676fe0",
				"method": "POST"
			},
			{
				"id": "c7902f1b-6ae1-4459-bf62-6b75cb511317",
				"method": "POST"
			},
			{
				"id": "f41c488f-6b58-40e4-8954-cd0b926daeeb",
				"method": "POST"
			},
			{
				"id": "037fd64d-bcdc-47ab-863e-e00db451695e",
				"method": "POST"
			},
			{
				"id": "84783e97-5f46-4662-aac6-3c1fdb8098c0",
				"method": "POST"
			},
			{
				"id": "18523ec3-bbd6-432c-b2ea-6033daefc35b",
				"method": "POST"
			},
			{
				"id": "dfe9d0cf-bed3-4ba5-9364-d10dac700ec3",
				"method": "POST"
			},
			{
				"id": "79d4e89d-d025-473b-a3c1-c6c549e0681b",
				"method": "PATCH"
			},
			{
				"id": "75c6eb8b-dfd0-44a2-88d1-018e2f882695",
				"method": "PATCH"
			},
			{
				"id": "05f2399c-e458-4163-8d8b-69f7a26c1f15",
				"method": "PATCH"
			},
			{
				"id": "992af586-f653-4c65-a634-cd208fa59b62",
				"method": "PATCH"
			},
			{
				"id": "6711043f-a81e-43d5-955d-d7e208e6e74a",
				"method": "PATCH"
			},
			{
				"id": "fdd0b424-57e5-41ce-b8ec-bf32943b601f",
				"method": "PATCH"
			},
			{
				"id": "ac87fc1f-cc3b-47f5-bd3a-c1e6e122efed",
				"method": "PATCH"
			},
			{
				"id": "dac6f476-e63c-4781-a059-b4ab4e7e9663",
				"method": "PATCH"
			},
			{
				"id": "32c20777-643c-4e4a-a217-f78cfd6a6542",
				"method": "PATCH"
			},
			{
				"id": "f252f71e-74ec-4f98-b90e-359e78f04d51",
				"method": "PATCH"
			},
			{
				"id": "e69f15f4-578e-4ec6-ba1b-2ad8544f0fc4",
				"method": "PATCH"
			},
			{
				"id": "71c6c9c0-fe47-45c4-acb2-7a1d06fbc1d5",
				"method": "PATCH"
			},
			{
				"id": "db40e871-d709-4900-82b4-07655a43fcdc",
				"method": "PATCH"
			},
			{
				"id": "c102b04c-b1e1-46ce-9dd9-5df4cf2c110d",
				"method": "PATCH"
			},
			{
				"id": "28391fda-23a4-411d-97bb-3c8495256575",
				"method": "POST"
			},
			{
				"id": "6d1c13af-d5f8-4c64-a02b-72735a1a9468",
				"method": "POST"
			},
			{
				"id": "5947604e-643b-407a-885d-d9c219f125b3",
				"method": "GET"
			},
			{
				"id": "960219bf-4ba5-450b-a45b-3e038ee7ca9a",
				"method": "GET"
			},
			{
				"id": "578cde74-7687-4330-a8a0-ebc0930b0deb",
				"method": "GET"
			},
			{
				"id": "53c72e7f-3259-46b5-a085-d3bbfa3c791b",
				"method": "POST"
			},
			{
				"id": "cc4d13e4-792c-4e22-957a-3144804c5e1d",
				"method": "POST"
			},
			{
				"id": "25b375e4-4b33-41a4-b905-fc290550b1fb",
				"method": "POST"
			},
			{
				"id": "555e1c1f-d4a1-4b3b-80cc-d74d967fad86",
				"method": "POST"
			},
			{
				"id": "a7962992-d817-4909-aaac-5994b6b4291c",
				"method": "POST"
			},
			{
				"id": "db1443f4-ba4e-4352-a8ce-26dee395ece6",
				"method": "GET"
			},
			{
				"id": "8d4c41d3-6f57-4067-b5ec-0523369e8c73",
				"method": "POST"
			},
			{
				"id": "1bc89af4-a0f1-435d-bd43-2a64143bf171",
				"method": "POST"
			},
			{
				"id": "d766fb52-f6a5-4a7a-b27e-d3ec94b612c4",
				"method": "POST"
			},
			{
				"id": "07290c8e-83c2-430b-91ef-fb321673cbeb",
				"method": "POST"
			},
			{
				"id": "07df6829-f321-472a-bae9-f57c87c13c8f",
				"method": "POST"
			},
			{
				"id": "00aabb1b-e897-4703-ac60-95510ad230dd",
				"method": "POST"
			},
			{
				"id": "5c5270c2-c11c-497d-89b7-329e6f54f22c",
				"method": "POST"
			},
			{
				"id": "96bb1b9d-32fb-4ea4-9e9c-9225b2c86a92",
				"method": "GET"
			},
			{
				"id": "5740ff9d-b799-4cc5-8370-9b94d763b90d",
				"method": "GET"
			},
			{
				"id": "cbc84137-ad52-49ba-96b4-2da895338be4",
				"method": "GET"
			},
			{
				"id": "37507080-41ca-4670-b64f-043b29d4a676",
				"method": "GET"
			},
			{
				"id": "cf895315-b16d-4a74-ad12-36b8a9c6000d",
				"method": "DELETE"
			},
			{
				"id": "b6c696d5-1748-4616-9252-a7d7b42affb5",
				"method": "DELETE"
			},
			{
				"id": "a2e764bc-ebde-4a03-891c-c9f7611a3ffd",
				"method": "DELETE"
			},
			{
				"id": "e10e24be-c6da-4bbd-a5e0-4e540f30d05a",
				"method": "DELETE"
			},
			{
				"id": "00316b65-ffe4-4332-8c11-a9e01e79b750",
				"method": "DELETE"
			},
			{
				"id": "4f677cdc-a5d6-445e-a12f-c4ca71806a7b",
				"method": "DELETE"
			},
			{
				"id": "0ee12c18-8f63-4e8f-8985-2041956a844c",
				"method": "DELETE"
			},
			{
				"id": "6e728d8b-1ce0-431b-b2d8-d076a91e089f",
				"method": "DELETE"
			},
			{
				"id": "d4220434-025f-4e43-bf0e-0c30bf10e3b7",
				"method": "DELETE"
			},
			{
				"id": "43fe8c44-4fd9-43fe-9f65-c89b2e5f8a5b",
				"method": "DELETE"
			},
			{
				"id": "9a1649a4-2853-4296-b478-5db9ec1f5d3c",
				"method": "DELETE"
			},
			{
				"id": "637cf41a-0183-4e8d-8830-a84253162bc6",
				"method": "DELETE"
			},
			{
				"id": "7bb2df62-43a4-43a6-ac3f-e6003413b6ee",
				"method": "DELETE"
			},
			{
				"id": "7e30759b-1e9a-42c7-8ef6-bf4eaa84a02f",
				"method": "DELETE"
			},
			{
				"id": "dc38cb78-1195-4942-becf-e97ff581a7ba",
				"method": "DELETE"
			},
			{
				"id": "2aedf87d-21e5-4aea-ac3b-1c84396d34b0",
				"method": "DELETE"
			},
			{
				"id": "9be9e211-42bd-4721-9d7a-006502ed9435",
				"method": "DELETE"
			},
			{
				"id": "f2a9154f-ed1c-4767-a9bb-1e411a10dbdd",
				"method": "DELETE"
			},
			{
				"id": "87c38732-f3dc-45dc-b1e1-87f3087f425d",
				"method": "DELETE"
			},
			{
				"id": "0c6aeae8-c424-4a80-bbe7-d84c846fcbad",
				"method": "DELETE"
			},
			{
				"id": "8b7e8111-21c5-4c22-baf8-7c71881eadf3",
				"method": "DELETE"
			}
		]
	}
}